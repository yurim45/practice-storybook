import type { NextPage } from 'next';
import Head from 'next/head';
import { AnyAction } from 'redux';
import { useDispatch, useSelector } from 'react-redux';
import { ThunkDispatch } from 'redux-thunk';
import styled from 'styled-components';
import {
	IconAdd,
	IconAlert,
	IconAlertBell,
	IconHelp,
	IconInputArrow,
	IconNotice,
	IconSearch,
	IconStar,
	IconTopMenu,
	IconUpload,
	IconOpenArrow,
	IconHome,
	IconClose,
	IconBackArrow,
	IconRefresh,
} from '@components/icons/index';
import { TagListCategory, TagNts, TagUserEdit } from '@components/tags';
import { SubMainTop, SubPageTitle, TabMenu } from '@components/common/index';
import { Button, TextInput, SearchInput } from '@elem/index';
import { getUserInfo } from '@data/userInfo/userInfo';
import { useForm } from 'react-hook-form';

type State = { data: string };
type AppDispatch = ThunkDispatch<State, any, AnyAction>;

const Home: NextPage = () => {
	const dispatch: AppDispatch = useDispatch();
	const userInfo = useSelector((state: any) => state?.userInfo);

	const { register, handleSubmit, reset } = useForm({
		defaultValues: {
			name: '',
			email: '',
			search: '',
		},
	});

	const handleUserInfo = (data: any) => {
		dispatch(getUserInfo(data));
		reset();
	};

	console.log('userInfo', userInfo);

	return (
		<>
			<Head>
				<title>Storybook Test Page</title>
				<meta name="description" content="Generated by create next app" />
				<link rel="icon" href="/favicon.ico" />
			</Head>

			<Main>
				<h1>Next + Storybook Test Page</h1>
				<section>
					<SubMainTop title="components" />
					<SubMainTop title="터치영역 텍스트패팅 10 생략지점점점점" />
					<SubPageTitle title="터치영역 텍스트패팅 10 생략지점점점점생략지점점점점" />
					<Button label="클릭" color="white" bgColor="primary" radius={10} />

					<Button
						label="수정"
						size="small"
						color="white"
						bgColor="primary"
						radius={14}
					/>
					<Button
						label="가족연결"
						size="small"
						color="white"
						bgColor="primary2"
						radius={14}
					/>
					<Button
						label="제외"
						size="small"
						color="txtBtnExcept"
						bgColor="bgBtnExcept"
						radius={14}
					/>
					<TabMenuWrapper>
						<TabMenu
							data={[
								{ id: 1, value: '일반공제' },
								{ id: 2, value: '추가공제' },
							]}
							components={{
								1: <></>,
								2: <></>,
							}}
						/>
					</TabMenuWrapper>
					<form onSubmit={handleSubmit(handleUserInfo)}>
						<TextInput
							register={register('name')}
							title="이름"
							placeholder="입력 대기_플레이스 홀더"
							iconStar={true}
						/>
						<TextInput
							register={register('email')}
							title="메일"
							placeholder="입력 대기_플레이스 홀더"
							iconHelp={true}
						/>
						<SearchInput register={register('search')} />
						<Button
							label="추가하기"
							type="submit"
							color="white"
							bgColor="primary2"
							radius={10}
						/>
					</form>

					<SubPageTitle title="SVG Icons" />
					<IconNotice />
					<IconAlert />
					<IconAdd />
					<IconInputArrow color="#333333" direction="up" />
					<IconInputArrow color="#999999" direction="down" />
					<IconHelp width={14} />
					<IconSearch width={18} />
					<IconAlertBell on={true} />
					<IconAlertBell on={false} />
					<IconTopMenu on={true} />
					<IconTopMenu on={false} />
					<IconStar />
					<IconUpload />
					<IconOpenArrow open={true} />
					<IconOpenArrow open={false} />
					<IconHome />
					<IconClose />
					<IconBackArrow />
					<IconRefresh />

					<SubPageTitle title="Tags" />
					<TagListCategory text="산후조리원" color="green" />
					<TagListCategory text="연봉초과" color="red" />
					<TagUserEdit />
					<TagNts />
				</section>
			</Main>
		</>
	);
};

export default Home;

const Main = styled.main`
	margin: auto;
	width: 375px;
	background: ${({ theme }) => theme.colors.bgColor2};
	border-top: 8px solid ${({ theme }) => theme.colors.primary};

	h1 {
		padding: 12px;
		font-size: ${({ theme }) => theme.textSize.m};
		font-weight: 700;
	}

	h2 {
		padding: 10px;
		font-size: ${({ theme }) => theme.textSize.m};
		font-weight: 700;
	}
`;

const ButtonWrapper = styled.div`
	margin: auto;
	width: 100%;
`;

const TabMenuWrapper = styled.div`
	margin: auto;
	width: 100%;
`;
