import type { NextPage } from 'next';
import Head from 'next/head';
import { AnyAction } from 'redux';
import { useDispatch, useSelector } from 'react-redux';
import { ThunkDispatch } from 'redux-thunk';
import styled from 'styled-components';
import {
	IconAdd,
	IconAlert,
	IconAlertBell,
	IconHelp,
	IconInputArrow,
	IconNotice,
	IconSearch,
	IconStar,
	IconTopMenu,
	IconUpload,
	IconOpenArrow,
	IconHome,
	IconClose,
	IconBackArrow,
	IconRefresh,
	IconCheckSmall,
	IconCheckBig,
} from '@components/icons/index';
import { TagListCategory, TagNts, TagUserEdit } from '@components/tags';
import {
	Select,
	TopCommon,
	TopSubMain,
	TopFullPopup,
	SubPageTitle,
	TabMenu,
	Anchor,
} from '@components/common/index';
import {
	Button,
	TextInput,
	SearchInput,
	Radio,
	RadioText,
	CheckText,
} from '@elem/index';
import { getUserInfo } from '@data/userInfo/userInfo';
import { useForm } from 'react-hook-form';

type State = { data: string };
type AppDispatch = ThunkDispatch<State, any, AnyAction>;

const Home: NextPage = () => {
	const dispatch: AppDispatch = useDispatch();
	const userInfo = useSelector((state: any) => state?.userInfo);

	const { register, handleSubmit, reset } = useForm({
		defaultValues: {
			name: '',
			email: '',
			search: '',
			eduCd: '01',
			cardCd: '1',
			cd: '1',
			disabledCode: 'N',
			resideyn: 'Y',
			nhiExceptionYn: 'N',
		},
	});

	const handleUserInfo = (data: any) => {
		console.log('data', data);
		dispatch(getUserInfo(data));
		reset();
	};

	console.log('userInfo', userInfo);

	return (
		<>
			<Head>
				<title>Storybook Test Page</title>
				<meta name="description" content="Generated by create next app" />
				<link rel="icon" href="/favicon.ico" />
			</Head>

			<Main>
				<h1>Next + Storybook Test Page</h1>
				<section>
					<TopCommon title="타이틀미정" />
					<TopSubMain title="신용카드 등" />
					<TopFullPopup title="타이틀영역" />
					<SubPageTitle title="터치영역 텍스트패팅 10 생략지점점점점생략지점점점점" />
					<Button label="클릭" />
					<Button label="클릭" disabled={true} />
					<Button label="수정" size="small" />
					<Button label="가족연결" size="small" disabled={true} />
					<Button label="제외" size="small" style="except" />
					<Button label="제외" size="small" style="except" disabled={true} />
					<TabMenu
						data={[
							{ id: 1, value: '일반공제', alert: true },
							{ id: 2, value: '추가공제', alert: false },
						]}
						components={{
							1: <></>,
							2: <></>,
						}}
					/>
					<TabMenu
						data={[
							{ id: 1, value: '신용카드', alert: true },
							{ id: 2, value: '직불카드', alert: false },
							{ id: 3, value: '현금영수증', alert: false },
							{ id: 4, value: '제로페이', alert: false },
						]}
						components={{
							1: <></>,
							2: <></>,
							3: <></>,
							4: <></>,
						}}
					/>
					<Anchor
						register={register('cardCd')}
						name="cardCd"
						data={[
							{ value: '1', text: '일반' },
							{ value: '2', text: '전통시장' },
							{ value: '3', text: '대중교통' },
							{ value: '4', text: '도서 공연' },
						]}
					/>
					<Anchor
						register={register('cd')}
						name="cd"
						data={[
							{ value: '1', text: '일반' },
							{ value: '2', text: '전통시장' },
							{ value: '3', text: '대중교통' },
							{ value: '4', text: '도서 공연' },
						]}
						color="red"
					/>
					<form onSubmit={handleSubmit(handleUserInfo)}>
						<TextInput
							register={register('name')}
							title="이름"
							placeholder="입력 대기_플레이스 홀더"
							iconStar={true}
						/>
						<TextInput
							register={register('email')}
							title="메일"
							placeholder="입력 대기_플레이스 홀더"
							iconHelp={true}
						/>
						<Select
							register={register('eduCd')}
							title="교육비 종류"
							data={[
								{ id: '1', value: '01', name: '유치원' },
								{ id: '2', value: '02', name: '초중고등학교' },
								{ id: '3', value: '03', name: '대학교' },
								{ id: '4', value: '04', name: '대학원' },
								{ id: '5', value: '05', name: '현장체험학습비' },
								{ id: '6', value: '06', name: '교복구입' },
								{ id: '7', value: '07', name: '장애인특수교육비' },
							]}
						/>
						<Radio
							register={register('disabledCode')}
							name="disabledCode"
							data={[
								{ value: 'Y', text: '예' },
								{ value: 'N', text: '아니오' },
							]}
						/>
						<Radio
							register={register('resideyn')}
							name="resideyn"
							title="거주자"
							data={[
								{ value: 'Y', text: '예' },
								{ value: 'N', text: '아니오' },
							]}
							disabled={true}
						/>
						<RadioText
							register={register('nhiExceptionYn')}
							name="nhiExceptionYn"
							data={[
								{
									value: 'Y',
									text: '예, 맞습니다.',
								},
								{ value: 'N', text: '아니오, 아닙니다.' },
							]}
						/>
						<Button label="추가하기" type="submit" />
					</form>
					<CheckText
						register={register('nhiExceptionYn')}
						name="nhiExceptionYn"
						data={[
							{
								value: '1',
								text: '기본공제',
							},
							{ value: '2', text: '한부모공제' },
							{ value: '3', text: '경로우대공제' },
							{ value: '4', text: '부녀자공제' },
						]}
					/>
					<SearchInput register={register('search')} />
					<SubPageTitle title="SVG Icons" />
					<IconNotice />
					<IconAlert />
					<IconAdd />
					<IconInputArrow color="#333333" direction="up" />
					<IconInputArrow color="#999999" direction="down" />
					<IconHelp width={14} />
					<IconSearch width={18} />
					<IconAlertBell on={true} />
					<IconAlertBell on={false} />
					<IconTopMenu on={true} />
					<IconTopMenu on={false} />
					<IconStar />
					<IconUpload />
					<IconOpenArrow open={true} />
					<IconOpenArrow open={false} />
					<IconHome />
					<IconClose />
					<IconBackArrow />
					<IconRefresh />
					<IconCheckSmall on={true} />
					<IconCheckSmall on={false} />
					<IconCheckBig on={true} />
					<IconCheckBig on={false} />

					<SubPageTitle title="Tags" />
					<TagListCategory text="산후조리원" color="green" />
					<TagListCategory text="연봉초과" color="red" />
					<TagUserEdit />
					<TagNts />
				</section>
			</Main>
		</>
	);
};

export default Home;

const Main = styled.main`
	margin: auto;
	width: 375px;
	background: ${({ theme }) => theme.colors.bgColor2};
	border-top: 8px solid ${({ theme }) => theme.colors.primary};

	h1 {
		padding: 12px;
		font-size: ${({ theme }) => theme.textSize.m};
		font-weight: 700;
	}

	h2 {
		padding: 10px;
		font-size: ${({ theme }) => theme.textSize.m};
		font-weight: 700;
	}
`;
